name: csv2mongodb-integration-testing
on: [pull_request, workflow_dispatch]
jobs:
  integration-test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        id: checkout-project
        uses: actions/checkout@v2
      - name: Create jar for spark
        id: create-spark-jar
        uses: lokkju/github-action-sbt@8-1.3.0-2.11.12
        with:
          commands: assembly
          sbt_project_directory: .
      - name: Checkout apache livy project
        id: checkout-apache-livy
        uses: actions/checkout@v2
        with:
          repository: OfekHod/apache-livy-docker.git
          ref: master
          path: apache-livy-docker
      - name: List working dir
        run: ls -la .
      - name: Build apache livy docker image
        id: build-livy-docker-image
        working-directory: ./apache-livy-docker
        run: docker build . -t livy-image
      - name: Start docker compose spark master/executor and mongoDB
        id: start-docker-compose
        run: docker-compose up -d
      - name: Run spark execution
        id: run-spark-execution
        run: echo "::set-output name=run_spark::$(bash ./src/test/resources/integration_test/run_spark_job.sh)"
      - name: Poll spark job status
        id: poll-spark-job-status
        run: echo "::set-output name=spark_result::$(bash ./src/test/resources/integration_test/spark_job_polling.sh ${{ steps.run-spark-execution.outputs.run_spark }})"
      - name: Check mongo db content
        id: check-mongo-db-content
        if: steps.poll-spark-job-status.outputs.spark_result == 'success'
        run: echo "::set-output name=row_count::$(docker exec -it mongodb mongo < /tmp/query/mongo_query.js 2>&1 | tr -s '\n' '#' | awk -F ' ' '{print $3}')"
      - name: Integration test failed
        id: integration-test-failed
        if: steps.poll-spark-job-status.outputs.spark_result == 'error'
        run: echo "Spark job failed, result is error"
      - name: Integration test passed
        if: steps.check-mongo-db-content.outputs.row_count == 0
        run: echo "Count of documents in mongoDB failed. Exiting with error..." && exit 1